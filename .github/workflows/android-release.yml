name: Android Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Android Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    env:
      GOTIFY_URL: ${{ secrets.GOTIFY_URL }}
      GOTIFY_TOKEN: ${{ secrets.GOTIFY_TOKEN }}
    
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Build Android Release
        run: eas build --platform android --profile production --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Wait for build to complete
        run: |
          start_time=$(date +%s)
          max_wait_time=7200  # 2小时 = 7200秒
          
          while true; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            
            if [ $elapsed_time -gt $max_wait_time ]; then
              echo "Error: Build timeout after 2 hours of waiting"
              exit 1
            fi
            
            echo "Checking build status... (已等待 $((elapsed_time/60)) 分钟)"
            # 获取最新的构建（包括正在进行的）
            BUILD_LIST=$(eas build:list --platform android --json --non-interactive --limit 1 || echo "[]")
            echo "Raw build list output: $BUILD_LIST"
            
            if [ "$BUILD_LIST" = "[]" ]; then
              echo "No builds found yet. Waiting..."
              sleep 600
              continue
            fi
            
            if ! echo "$BUILD_LIST" | jq . >/dev/null 2>&1; then
              echo "Error: Invalid JSON received from eas build:list"
              echo "Raw output: $BUILD_LIST"
              sleep 600
              continue
            fi
            
            # 获取最新的构建状态
            BUILD_STATUS=$(echo "$BUILD_LIST" | jq -r '.[0].status // empty')
            if [ "$BUILD_STATUS" = "FINISHED" ]; then
              echo "Build completed successfully!"
              break
            elif [ "$BUILD_STATUS" = "ERROR" ]; then
              echo "Build failed with status: $BUILD_STATUS"
              exit 1
            fi
            
            echo "Current build status: $BUILD_STATUS"
            echo "Waiting for build to complete..."
            sleep 600
          done

      - name: Download build artifacts
        run: |
          # 获取最新的已完成构建的下载URL
          BUILD_URL=$(eas build:list --platform android --status=finished --json --non-interactive --limit 1 | jq -r '.[0].artifacts.buildUrl')
          echo "获取到构建下载URL: $BUILD_URL"
          curl -L "$BUILD_URL" -o ./build.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./build.apk
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Android Release Build
            
            Git Commit: ${{ github.sha }}
            Commit Message: ${{ github.event.head_commit.message }}
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Gotify Notification
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            STATUS="✅ 构建成功"
          else
            STATUS="❌ 构建失败"
          fi
          
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          
          curl -X POST "$GOTIFY_URL/message" \
            -H "X-Gotify-Key: $GOTIFY_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"title\": \"Android 应用构建通知\",
              \"message\": \"$STATUS\n\n版本: ${{ github.ref_name }}\n提交信息: ${{ github.event.head_commit.message }}\n\n下载链接: $RELEASE_URL\",
              \"priority\": 5
            }" 